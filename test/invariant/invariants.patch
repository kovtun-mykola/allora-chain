diff --git a/x/emissions/module/abci.go b/x/emissions/module/abci.go
index 8d778144..523ac83f 100644
--- a/x/emissions/module/abci.go
+++ b/x/emissions/module/abci.go
@@ -4,6 +4,8 @@ import (
 	"context"
 	"fmt"
 
+	emissionskeeper "github.com/allora-network/allora-chain/x/emissions/keeper"
+
 	"cosmossdk.io/errors"
 	"github.com/allora-network/allora-chain/x/emissions/module/rewards"
 	sdk "github.com/cosmos/cosmos-sdk/types"
@@ -11,6 +13,10 @@ import (
 
 func EndBlocker(ctx context.Context, am AppModule) error {
 	sdkCtx := sdk.UnwrapSDKContext(ctx)
+	invariantMessage, invariantFailed := emissionskeeper.AllInvariants(am.keeper)(sdkCtx)
+	if invariantFailed {
+		panic(fmt.Sprintf("Invariants broken: %s", invariantMessage))
+	}
 	blockHeight := sdkCtx.BlockHeight()
 	sdkCtx.Logger().Debug(
 		fmt.Sprintf("\n ---------------- Emissions EndBlock %d ------------------- \n",
diff --git a/x/emissions/module/module.go b/x/emissions/module/module.go
index 2cda57ab..3f619551 100644
--- a/x/emissions/module/module.go
+++ b/x/emissions/module/module.go
@@ -18,6 +18,15 @@ import (
 	gwruntime "github.com/grpc-ecosystem/grpc-gateway/runtime"
 )
 
+var (
+	_ module.HasInvariants = AppModule{}
+)
+
+// RegisterInvariants registers the emissions module invariants.
+func (am AppModule) RegisterInvariants(ir sdk.InvariantRegistry) {
+	keeper.RegisterInvariants(ir, &am.keeper)
+}
+
 var (
 	_ module.AppModuleBasic   = AppModule{}
 	_ module.HasGenesis       = AppModule{}
